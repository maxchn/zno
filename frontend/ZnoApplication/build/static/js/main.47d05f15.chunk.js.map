{"version":3,"sources":["auth.js","links.js","components/NavBar.js","components/Home.js","components/About.js","components/CustomSnackbar.js","components/Signup.js","components/Signin.js","App.js","serviceWorker.js","index.js"],"names":["isAuthenticated","links","default","home","about","signin","signup","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","handleDrawerOpen","bind","assertThisInitialized","handleDrawerClose","setState","pathname","location","_this$props","classes","theme","pages","text","link","iconComponent","react_default","a","createElement","HomeOutlined_default","className","icon","InfoOutlined_default","root","index_es","position","onClick","classNames","menuButton","hide","color","aria-label","Menu_default","variant","grow","to","component","RouterLink","underline","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","map","page","index","key","button","selected","primary","Component","withRouter","withStyles","flexGrow","marginLeft","marginRight","label","textTransform","display","width","flexShrink","alignItems","padding","justifyContent","textDecoration","fontWeight","currentLink","border","withTheme","Home","style","About","CustomSnackbar","changeState","handleCloseSnackbar","isSnackbarVisible","console","log","snackbarMessage","anchorOrigin","vertical","horizontal","isSnakbarVisible","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","snakbarText","action","Close_default","React","SignUp","handleChange","event","signupUser","target","name","value","loading","shouldBlockNavigation","phone","password","confirmPassword","email","handleSubmit","ValidatorForm","addValidationRule","_this2","fetch","then","res","catch","err","error","main","react_router","when","avatar","LockOutlined_default","lib","onSubmit","form","margin","required","fullWidth","autoComplete","onChange","validators","errorMessages","type","disabled","submit","size","buttonProgress","components_CustomSnackbar","defineProperty","spacing","unit","breakpoints","up","marginTop","flexDirection","concat","backgroundColor","palette","secondary","cursor","top","left","SignIn","user","login","signinUser","jsonBody","JSON","stringify","myHeaders","Headers","append","requestSettings","method","body","mode","cache","headers","Content-Type","Access-Control-Allow-Origin","resp","checked","trim","remember","String","toLowerCase","test","control","App","components_NavBar","exact","path","render","components_Home","Signin","Signup","Boolean","window","hostname","match","ReactDOM","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOAgCO,IAAMA,EAAkB,kBAAM,oLC/BxBC,EAAQ,CACjBC,QAAS,IACTC,KAAM,QACNC,MAAQ,SACRC,OAAQ,UACRC,OAAQ,WCiFNC,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,MAAM,GAErBR,EAAKS,iBAAmBT,EAAKS,iBAAiBC,KAAtBT,OAAAU,EAAA,EAAAV,CAAAD,IACxBA,EAAKY,kBAAoBZ,EAAKY,kBAAkBF,KAAvBT,OAAAU,EAAA,EAAAV,CAAAD,IALVA,kFASfG,KAAKU,SAAS,CAAEL,MAAM,gDAItBL,KAAKU,SAAS,CAAEL,MAAM,qCAGjB,IAEGM,EAAaX,KAAKJ,MAAMgB,SAAxBD,SAFHE,EAMsBb,KAAKJ,MAAxBkB,EANHD,EAMGC,QAASC,EANZF,EAMYE,MACTV,EAASL,KAAKI,MAAdC,KAEFW,EAAQ,CAAC,CACXC,KAAM,OACNC,KAAM7B,EAAME,KACZ4B,cAAeC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAUG,UAAWV,EAAQW,QAC7C,CACCR,KAAM,QACNC,KAAM7B,EAAMG,MACZ2B,cAAeC,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUG,UAAWV,EAAQW,SAIhD,OACIL,EAAAC,EAAAC,cAAA,OAAKE,UAAWV,EAAQa,MACpBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,SAAS,UACbT,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACIR,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIE,QAAS9B,KAAKM,iBACdkB,UAAWO,IAAWjB,EAAQkB,WAAY3B,GAAQS,EAAQmB,MAAOC,MAAM,UAAUC,aAAW,QAC5Ff,EAAAC,EAAAC,cAACc,EAAAf,EAAD,OAGJD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYS,QAAQ,KAAKb,UAAWV,EAAQwB,KAAMJ,MAAM,WACpDd,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMW,GAAIlD,EAAMC,QAASkD,UAAWC,IAAYC,UAAU,OAAOR,MAAM,WAAvE,QAIJd,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQM,MAAM,WACVd,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMW,GAAIlD,EAAMI,OAAQ+C,UAAWC,IAAYC,UAAU,OAAOR,MAAM,WAAtE,wBAQZd,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIJ,UAAWV,EAAQ6B,OACnBN,QAAQ,aACRO,OAAO,OACPvC,KAAMA,EACNS,QAAS,CACL+B,MAAO/B,EAAQgC,cAGnB1B,EAAAC,EAAAC,cAAA,OAAKE,UAAWV,EAAQiC,cACpB3B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYS,QAAQ,KAAKH,MAAM,UAAUV,UAAWV,EAAQwB,MAA5D,OAGAlB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYE,QAAS9B,KAAKS,mBACD,QAApBM,EAAMiC,UAAsB5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,MAAsBD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,QAG3DD,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACAR,EAAAC,EAAAC,cAACM,EAAA,EAAD,KAEKZ,EAAMmC,IAAI,SAACC,EAAMC,GAAP,OACPjC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMc,UAAU,OAAOlB,UAAWV,EAAQI,KAAMoC,IAAKF,EAAKnC,KAAMuB,UAAWC,IAAYF,GAAIa,EAAKlC,MAC5FE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAU2B,QAAM,EAACC,SAAUJ,EAAKlC,OAASP,GAAaA,IAAatB,EAAMC,SAAW8D,EAAKlC,OAAS7B,EAAME,MACpG6B,EAAAC,EAAAC,cAACM,EAAA,EAAD,KAAewB,EAAKjC,eACpBC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAc6B,QAASL,EAAKnC,qBAtF3CyC,aAgHNC,cAAWC,qBA1KX,SAAA7C,GAAK,MAAK,CACrBY,KAAM,CACFkC,SAAU,EACVhC,SAAS,UAEbS,KAAM,CACFuB,SAAU,GAEd7B,WAAY,CACR8B,YAAa,GACbC,YAAa,IAajBC,MAAO,CACHC,cAAe,cAEnBhC,KAAM,CACFiC,QAAS,QAEbvB,OAAQ,CACJwB,MA/BY,IAgCZC,WAAY,GAEhBtB,YAAa,CACTqB,MAnCY,KAqChBpB,aAAc,CACVmB,QAAS,OACTG,WAAY,SACZC,QAAS,QAETC,eAAgB,YAEpBrD,KAAM,CACFsD,eAAgB,OAChBC,WAAY,QAEhBC,YAAa,CACTC,OAAQ,kBAEZlD,KAAM,KAwHmC,CAAEmD,WAAW,GAAhChB,CAAwCjE,IC5LnDkF,mLANP,OAAQzD,EAAAC,EAAAC,cAAA,OAAKwD,MAAO,CAACH,OAAO,oBAApB,eAHGjB,aCSJqB,mLANP,OAAQ3D,EAAAC,EAAAC,cAAA,OAAKwD,MAAO,CAACH,OAAO,kBAApB,gBAHIjB,+CC6DLsB,cAxDX,SAAAA,EAAYpF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IACfnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAMJ,KAUVqF,YAAc,SAACrF,GACX,IAAMQ,EAAQP,EAAKO,MACnB,IAAK,IAAMkD,KAAO1D,EACdQ,EAAMkD,GAAO1D,EAAM0D,GAEvBzD,EAAKa,SAASN,IAhBCP,EAmBnBqF,oBAAsB,kBAAMrF,EAAKoF,YAAY,CAAEE,mBAAmB,KAjB9DC,QAAQC,IAAI,CAACzF,UAEbC,EAAKO,MAAQ,CACT+E,kBAAmBvF,EAAMuF,kBACzBG,gBAAiB1F,EAAM0F,iBANZzF,wEAsBf,OAAQuB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACJ2D,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBpF,KAAML,KAAKI,MAAMsF,iBACjBC,iBAAkB,IAClBC,QAAS5F,KAAKkF,oBACdW,aAAc,CACVC,mBAAoB,cAExBC,QAAS3E,EAAAC,EAAAC,cAAA,QAAM0E,GAAG,cAAchG,KAAKI,MAAM6F,aAC3CC,OAAQ,CACJ9E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI0B,IAAI,QACJnB,aAAW,QACXD,MAAM,UAENJ,QAAS9B,KAAKkF,qBAEd9D,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,iBA3CS+E,IAAM1C,4CCuD7B2C,cACF,SAAAA,EAAYzG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACfxG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuG,GAAAlG,KAAAH,KAAMJ,KAuBVqF,YAAc,SAACrF,GACX,IAAMQ,EAAQP,EAAKO,MACnB,IAAK,IAAMkD,KAAO1D,EACdQ,EAAMkD,GAAO1D,EAAM0D,GAEvBzD,EAAKa,SAASN,IA7BCP,EAiCnByG,aAAe,SAACC,GAAU,IACdC,EAAe3G,EAAKO,MAApBoG,WACRA,EAAWD,EAAME,OAAOC,MAAQH,EAAME,OAAOE,MAE7C9G,EAAKoF,YAAY,CACbuB,WAAYA,EACZI,SAAS,IAKb/G,EAAKgH,sBAA6C,KAArBL,EAAWM,OAAwC,KAAxBN,EAAWO,UA5CpDlH,EAkEnBqF,oBAAsB,kBAClBrF,EAAKoF,YAAY,CAAEE,mBAAmB,KAjEtCtF,EAAKO,MAAQ,CACToG,WAAY,CACRM,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,MAAO,IAEXL,SAAS,EACTzB,mBAAmB,EACnBG,gBAAiB,SAGrBzF,EAAKgH,uBAAwB,EAE7BhH,EAAKqH,aAAerH,EAAKqH,aAAa3G,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IAGpBsH,gBAAcC,kBAAkB,kBAAmB,SAACT,GAChD,OAAOA,IAAU9G,EAAKO,MAAMoG,WAAWO,WApB5BlH,8EA+CJ,IAAAwH,EAAArH,KAEXoF,QAAQC,IAAI,UACZD,QAAQC,IAAIrF,KAAKI,MAAMoG,YACvBxG,KAAKiF,YAAY,CAAE2B,SAAS,IAE5BU,MAAM,IACDC,KAAK,SAAAC,GACFH,EAAKpC,YAAY,CAAE2B,SAAS,MAG/Ba,MAAM,SAAAC,GACHtC,QAAQuC,MAAMD,GACdL,EAAKpC,YAAY,CAAE2B,SAAS,uCAe/B,IAEG9F,EAAYd,KAAKJ,MAAjBkB,QACA0F,EAAexG,KAAKI,MAApBoG,WAER,OACIpF,EAAAC,EAAAC,cAAA,QAAME,UAAWV,EAAQ8G,MACrBxG,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACAR,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACIC,KAAM9H,KAAK6G,sBACXd,QAAQ,8DACZ3E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOJ,UAAWV,EAAQ+B,OACtBzB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQJ,UAAWV,EAAQiH,QACvB3G,EAAAC,EAAAC,cAAC0G,EAAA3G,EAAD,OAEJD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYY,UAAU,KAAKH,QAAQ,MAAnC,WAGAjB,EAAAC,EAAAC,cAAC2G,EAAA,cAAD,CAAeC,SAAUlI,KAAKkH,aAAc1F,UAAWV,EAAQqH,MAQ3D/G,EAAAC,EAAAC,cAAC2G,EAAA,cAAD,CACIG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTtE,MAAM,QACN0C,KAAK,QACL6B,aAAa,MACbC,SAAUxI,KAAKsG,aACfK,MAAOH,EAAWM,MAClB2B,WAAY,CAAC,WAAY,oCACzBC,cAAe,CAAC,oBAAqB,oDAOzCtH,EAAAC,EAAAC,cAAC2G,EAAA,cAAD,CACIG,OAAO,SACPG,aAAa,eACbF,UAAQ,EACRC,WAAS,EACTtE,MAAM,WACN0C,KAAK,WACLiC,KAAK,WACLH,SAAUxI,KAAKsG,aACfK,MAAOH,EAAWO,SAClB0B,WAAY,CAAC,YACbC,cAAe,CAAC,0BAQpBtH,EAAAC,EAAAC,cAAC2G,EAAA,cAAD,CACIG,OAAO,SACPG,aAAa,eACbF,UAAQ,EACRC,WAAS,EACTtE,MAAM,mBACN0C,KAAK,kBACLiC,KAAK,WACLH,SAAUxI,KAAKsG,aACfK,MAAOH,EAAWQ,gBAClByB,WAAY,CAAC,kBAAmB,YAChCC,cAAe,CAAC,oBAAqB,4BAQzCtH,EAAAC,EAAAC,cAAC2G,EAAA,cAAD,CACIG,OAAO,SACPG,aAAa,QACbD,WAAS,EACTtE,MAAM,QACN0C,KAAK,QACL+B,WAAY,CAAC,WACbC,cAAe,CAAC,sBAChB/B,MAAOH,EAAWS,MAClBuB,SAAUxI,KAAKsG,eAGnBlF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI+G,KAAK,SACLL,WAAS,EACTjG,QAAQ,YACRH,MAAM,UACN0G,SAAU5I,KAAKI,MAAMwG,QACrBpF,UAAWV,EAAQ+H,QANvB,WAQC7I,KAAKI,MAAMwG,SAAWxF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAkBkH,KAAM,GAAItH,UAAWV,EAAQiI,kBAK1E3H,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMJ,UAAWV,EAAQI,KAAMgB,MAAM,YAAYM,UAAWC,IAAYF,GAAIlD,EAAMI,QAAlF,YAGJ2B,EAAAC,EAAAC,cAAC0H,EAAD,CAAgB7D,mBAAmB,EAAMG,gBAAiBtF,KAAKI,MAAMkF,0BAzLhE5B,aAsMNE,MAhPA,SAAA7C,GAAK,MAAK,CACrB6G,KAAK9H,OAAAmJ,EAAA,EAAAnJ,CAAA,CACDqE,MAAO,OACPD,QAAS,QACTJ,WAAiC,EAArB/C,EAAMmI,QAAQC,KAC1BpF,YAAkC,EAArBhD,EAAMmI,QAAQC,MAC1BpI,EAAMqI,YAAYC,GAAG,IAA2B,EAArBtI,EAAMmI,QAAQC,KAAW,GAAK,CACtDhF,MAAO,IACPL,WAAY,OACZC,YAAa,SAGrBlB,MAAO,CACHyG,UAAgC,EAArBvI,EAAMmI,QAAQC,KACzBjF,QAAS,OACTqF,cAAe,SACflF,WAAY,SACZC,QAAO,GAAAkF,OAA0B,EAArBzI,EAAMmI,QAAQC,KAAnB,OAAAK,OAAsD,EAArBzI,EAAMmI,QAAQC,KAA/C,OAAAK,OAAkF,EAArBzI,EAAMmI,QAAQC,KAA3E,OAEXpB,OAAQ,CACJK,OAAQrH,EAAMmI,QAAQC,KACtBM,gBAAiB1I,EAAM2I,QAAQC,UAAU/B,MAE7CO,KAAM,CACFhE,MAAO,OACPmF,WAAkC,EAArBvI,EAAMmI,QAAQC,MAE/BN,OAAQ,CACJS,UAAgC,EAArBvI,EAAMmI,QAAQC,MAE7BjI,KAAM,CACF0I,OAAQ,WAEZb,eAAgB,CACZlH,SAAU,WACVgI,IAAK,MACLC,KAAM,MACNR,WAAY,GACZxF,YAAa,MA0MNF,CAAmByC,GCnM5B0D,cACF,SAAAA,EAAYnK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+J,IACflK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiK,GAAA5J,KAAAH,KAAMJ,KAuBVqF,YAAc,SAACrF,GACX,IAAMQ,EAAQP,EAAKO,MACnB,IAAK,IAAMkD,KAAO1D,EACdQ,EAAMkD,GAAO1D,EAAM0D,GAEvBzD,EAAKa,SAASN,IA7BCP,EAgCnBqH,aAAe,WACX9B,QAAQC,IAAI,UAIZ,IAEM2E,EAAO,CACTC,MAAOpK,EAAKO,MAAM8J,WAAWD,MAC7BlD,SAAUlH,EAAKO,MAAM8J,WAAWnD,UAM9BoD,EAAWC,KAAKC,UAAUL,GAC5BM,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAgB,oBAGjCF,EAAUE,OAAO,8BAA+B,KAGhD,IAAMC,EAAkB,CACpBC,OAAQ,OACRC,KAAMR,EACNS,KAAM,OACNC,MAAO,UAEPC,QAAS,CACLC,eAAgB,mBAChBC,8BAA+B,MAIvC5F,QAAQC,IAAI,CAAEoF,oBAEd5K,EAAKoF,YAAY,CAAE2B,SAAS,IAE5BU,MAlCY,mDAkCDmD,GACNlD,KAAK,SAAC0D,GACH7F,QAAQC,IAAI,CAAE4F,SACdpL,EAAKoF,YAAY,CACb2B,SAAS,MAEda,MAAM,SAAAC,GACLtC,QAAQC,IAAI,gBACZD,QAAQC,IAAI,CAAEqC,QACd7H,EAAKoF,YAAY,CACb2B,SAAS,OAjFN/G,EAsFnByG,aAAe,SAACC,GAAU,IAEd2D,EAAerK,EAAKO,MAApB8J,WACRA,EAAW3D,EAAME,OAAOC,MAA8B,aAAtBH,EAAME,OAAOkC,KAAsBpC,EAAME,OAAOyE,QAAU3E,EAAME,OAAOE,MAAMwE,OAC7GtL,EAAKoF,YAAY,CAAEiF,WAAYA,IAC/BrK,EAAKgH,sBAA6C,KAArBqD,EAAWD,OAAwC,KAAxBC,EAAWnD,SACnE3B,QAAQC,IAAIxF,EAAKgH,wBAzFjBhH,EAAKO,MAAQ,CACT8J,WAAY,CACRD,MAAO,mBACPlD,SAAU,aACVqE,UAAU,GAEdxE,SAAS,EACTlB,kBAAkB,EAClBO,YAAa,SAEjBpG,EAAKgH,uBAAwB,EAE7BM,gBAAcC,kBAAkB,iBAAkB,SAACT,GAC/C,IAEMsD,EAAQoB,OAAO1E,GAAO2E,cAC5B,MAHqB,wJAGAC,KAAKtB,IAFL,qBAE4BsB,KAAKtB,KAnB3CpK,wEA+FV,IACGiB,EAAYd,KAAKJ,MAAjBkB,QACAoJ,EAAelK,KAAKI,MAApB8J,WACR,OACI9I,EAAAC,EAAAC,cAAA,QAAME,UAAWV,EAAQ8G,MACrBxG,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACAR,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACIC,KAAM9H,KAAK6G,sBACXd,QAAQ,8DACZ3E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOJ,UAAWV,EAAQ+B,OACtBzB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQJ,UAAWV,EAAQiH,QACvB3G,EAAAC,EAAAC,cAAC0G,EAAA3G,EAAD,OAEJD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYY,UAAU,KAAKH,QAAQ,MAAnC,WAGAjB,EAAAC,EAAAC,cAAC2G,EAAA,cAAD,CAAeC,SAAUlI,KAAKkH,aAAc1F,UAAWV,EAAQqH,MAK3D/G,EAAAC,EAAAC,cAAC2G,EAAA,cAAD,CACIG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTtE,MAAM,cACN0C,KAAK,QACL6B,aAAa,YACbC,SAAUxI,KAAKsG,aACfK,MAAOuD,EAAWD,MAClBxB,WAAY,CAAC,WAAY,kBACzBC,cAAe,CAAC,oBAAqB,mCAMzCtH,EAAAC,EAAAC,cAAC2G,EAAA,cAAD,CACIG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTtE,MAAM,WACN0C,KAAK,WACLiC,KAAK,WACLJ,aAAa,mBACbC,SAAUxI,KAAKsG,aACfK,MAAOuD,EAAWnD,SAClB0B,WAAY,CAAC,YACbC,cAAe,CAAC,0BAGpBtH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI4J,QACIpK,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIsJ,QAAShB,EAAWkB,SACpB1E,KAAK,WACL8B,SAAUxI,KAAKsG,aACfpE,MAAM,YAEd8B,MAAM,gBAEV5C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACI+G,KAAK,SACLL,WAAS,EACTjG,QAAQ,YACRH,MAAM,UACN0G,SAAU5I,KAAKI,MAAMwG,QACrBpF,UAAWV,EAAQ+H,QANvB,WAQC7I,KAAKI,MAAMwG,SAAWxF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAkBkH,KAAM,GAAItH,UAAWV,EAAQiI,kBAK1E3H,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMJ,UAAWV,EAAQI,KAAMgB,MAAM,YAAYM,UAAWC,IAAYF,GAAIlD,EAAMK,QAAlF,oBA1KCgE,aAsLNE,MAlOA,SAAA7C,GAAK,MAAK,CACrB6G,KAAK9H,OAAAmJ,EAAA,EAAAnJ,CAAA,CACDqE,MAAO,OACPD,QAAS,QACTJ,WAAiC,EAArB/C,EAAMmI,QAAQC,KAC1BpF,YAAkC,EAArBhD,EAAMmI,QAAQC,MAC1BpI,EAAMqI,YAAYC,GAAG,IAA2B,EAArBtI,EAAMmI,QAAQC,KAAW,GAAK,CACtDhF,MAAO,IACPL,WAAY,OACZC,YAAa,SAGrBlB,MAAO,CACHyG,UAAgC,EAArBvI,EAAMmI,QAAQC,KACzBjF,QAAS,OACTqF,cAAe,SACflF,WAAY,SACZC,QAAO,GAAAkF,OAA0B,EAArBzI,EAAMmI,QAAQC,KAAnB,OAAAK,OAAsD,EAArBzI,EAAMmI,QAAQC,KAA/C,OAAAK,OAAkF,EAArBzI,EAAMmI,QAAQC,KAA3E,OAEXpB,OAAQ,CACJK,OAAQrH,EAAMmI,QAAQC,KACtBM,gBAAiB1I,EAAM2I,QAAQC,UAAU/B,MAE7CO,KAAM,CACFhE,MAAO,OACPmF,UAAWvI,EAAMmI,QAAQC,MAE7BN,OAAQ,CACJS,UAAgC,EAArBvI,EAAMmI,QAAQC,MAE7BjI,KAAM,CACF0I,OAAQ,WAEZb,eAAgB,CACZlH,SAAU,WACVgI,IAAK,MACLC,KAAM,MACNR,WAAY,GACZxF,YAAa,MA4LNF,CAAmBmG,UCxMnB0B,MA3Bf,WAUC,OACCrK,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KAECzG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAO8D,OAAK,EAACC,KAAMvM,EAAMC,QAASuM,OAAQ,kBAAMzM,IAAqBgC,EAAAC,EAAAC,cAACwK,EAAD,MAAa1K,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAUtF,GAAIlD,EAAMI,YAEtG2B,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAO8D,OAAK,EAACC,KAAMvM,EAAME,KAAMsM,OAAQ,kBAAMzM,IAAqBgC,EAAAC,EAAAC,cAACwK,EAAD,MAAa1K,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAUtF,GAAIlD,EAAMI,YACnG2B,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAO+D,KAAMvM,EAAMG,MAAOgD,UAAWuC,KACnC3F,KAAqBgC,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAO+D,KAAMvM,EAAMI,OAAQ+C,UAAWuJ,KAC3D3M,KAAqBgC,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAO+D,KAAMvM,EAAMK,OAAQ8C,UAAWwJ,IAC7D5K,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOrF,UAAWqC,OC5BFoH,QACW,cAA7BC,OAAOtL,SAASuL,UAEa,UAA7BD,OAAOtL,SAASuL,UAEhBD,OAAOtL,SAASuL,SAASC,MACvB,2DCXJC,IAASR,OAAOzK,EAAAC,EAAAC,cAACgL,EAAA,EAAD,SAAgBlL,EAAAC,EAAAC,cAACiL,EAAD,OAAyBC,SAASC,eAAe,SD0H3E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrF,KAAK,SAAAsF,GACjCA,EAAaC","file":"static/js/main.47d05f15.chunk.js","sourcesContent":["export const roles = {\r\n  user: 'user',\r\n  admin: 'admin',\r\n  teacher: 'teacher',\r\n}\r\nfunction getRoles(userToken) {\r\n  // TODO: Реализовать запрос на сервер для получения ролей, по переданному токену\r\n  return ['user'];\r\n}\r\n\r\nfunction getCurrentUserToken() {\r\n  // TODO: Реализовать получение токена из куков\r\n  // return '1234567890';\r\n}\r\n\r\nfunction hasRole(userToken, role) {\r\n  if (!!userToken)\r\n    userToken = getCurrentUserToken();\r\n  return getRoles(userToken).some(userRole => userRole.toLowerCase() === role.toLowerCase());\r\n}\r\n\r\nfunction isUser(userToken) {\r\n  return hasRole(userToken, roles.user);\r\n}\r\nfunction isTeacher(userToken) {\r\n  return hasRole(userToken, roles.teacher);\r\n}\r\nfunction isAdmin(userToken) {\r\n  return hasRole(userToken, roles.admin);\r\n}\r\n\r\n\r\nexport const isAuthenticated = () => !!getCurrentUserToken();\r\n\r\nexport { getCurrentUserToken, isUser, isTeacher, isAdmin };","//Файл для хранения объекта с ссылкам\r\nexport const links = {\r\n    default: '/',\r\n    home: '/home',\r\n    about : '/about',\r\n    signin: '/signin',\r\n    signup: '/signup'\r\n};","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\n\r\n// Material Components\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AppBar, Toolbar, Typography, Button,\r\n    IconButton, Drawer, Divider,\r\n    List, ListItem, ListItemIcon, ListItemText, Link\r\n} from '@material-ui/core';\r\n\r\n\r\n// Material Icons\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport HomeIcon from \"@material-ui/icons/HomeOutlined\";\r\n\r\n// Other resources\r\nimport { links } from \"../links\";\r\n\r\n\r\n\r\nconst drawerWidth = 250;\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        position:'static'\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n    // button: {\r\n    //     // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    //     // borderRadius: 3,\r\n    //     border: 0,\r\n    //     // color: 'white',\r\n    //     width: '100%',\r\n    //     margin: 0,\r\n    //     display: 'flex',\r\n    //     padding: '5px 30px',\r\n    //     // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    // },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        // ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        fontWeight: 'bold'\r\n    },\r\n    currentLink: {\r\n        border: '1px solid gray'\r\n    },\r\n    icon: {\r\n        // backgroundColor: theme.palette.secondary.main,\r\n        // color: '#fafafa',\r\n        // padding: '5px',\r\n        // borderRadius: '50%'\r\n    },\r\n});\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: false };\r\n\r\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n    }\r\n\r\n    handleDrawerOpen() {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDrawerClose() {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { pathname } = this.props.location;\r\n        // console.log({pathname});\r\n\r\n\r\n        const { classes, theme } = this.props;\r\n        const { open } = this.state;\r\n\r\n        const pages = [{\r\n            text: 'Home',\r\n            link: links.home,\r\n            iconComponent: <HomeIcon className={classes.icon} />\r\n        }, {\r\n            text: 'About',\r\n            link: links.about,\r\n            iconComponent: <InfoIcon className={classes.icon} />\r\n        }];\r\n\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar >\r\n                        <IconButton\r\n                            onClick={this.handleDrawerOpen}\r\n                            className={classNames(classes.menuButton, open && classes.hide)} color=\"inherit\" aria-label=\"Menu\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h6\" className={classes.grow} color=\"inherit\" >\r\n                            <Link to={links.default} component={RouterLink} underline='none' color=\"inherit\" >\r\n                                ZNO\r\n                            </Link>\r\n                        </Typography>\r\n                        <Button color=\"inherit\">\r\n                            <Link to={links.signin} component={RouterLink} underline='none' color=\"inherit\" >\r\n                                Sign in / Sing up\r\n                            </Link>\r\n                        </Button>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                            ZNO\r\n                        </Typography>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n\r\n                        {pages.map((page, index) => (\r\n                            <Link underline='none' className={classes.link} key={page.text} component={RouterLink} to={page.link}>\r\n                                <ListItem button selected={page.link === pathname || (pathname === links.default && page.link === links.home)} >\r\n                                    <ListItemIcon>{page.iconComponent}</ListItemIcon>\r\n                                    <ListItemText primary={page.text} />\r\n\r\n                                </ListItem>\r\n                            </Link>\r\n                        ))}\r\n                    </List>\r\n                    {/* <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List> */}\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles, { withTheme: true })(NavBar));\r\n","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (<div style={{border:'1px solid black'}}>\r\n            HOME\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n\r\n    render() {\r\n        return (<div style={{border:'1px solid red'}}>\r\n            About\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { IconButton, Snackbar } from '@material-ui/core';\r\n\r\nclass CustomSnackbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log({props});\r\n\r\n        this.state = {\r\n            isSnackbarVisible: props.isSnackbarVisible,\r\n            snackbarMessage: props.snackbarMessage,\r\n        }\r\n\r\n    }\r\n\r\n    changeState = (props) => {\r\n        const state = this.state;\r\n        for (const key in props) {\r\n            state[key] = props[key];\r\n        }\r\n        this.setState(state);\r\n    }\r\n\r\n    handleCloseSnackbar = () => this.changeState({ isSnackbarVisible: false });\r\n\r\n    render() {\r\n        return (<Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={this.state.isSnakbarVisible}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleCloseSnackbar}\r\n            ContentProps={{\r\n                'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{this.state.snakbarText}</span>}\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    // className={classes.close}\r\n                    onClick={this.handleCloseSnackbar}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>,\r\n            ]}\r\n        />);\r\n    }\r\n}\r\n\r\n\r\nCustomSnackbar.propTypes = {\r\n    isSnackbarVisible: PropTypes.bool,\r\n    snakbarText: PropTypes.string,\r\n};\r\n\r\n\r\nexport default CustomSnackbar;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Prompt } from \"react-router\";\r\n\r\nimport {\r\n    Avatar, Button, CssBaseline, Paper, Typography,\r\n    // FormControl, Input, InputLabel,\r\n    Link, CircularProgress,\r\n\r\n} from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport CustomSnackbar from \"./CustomSnackbar\";\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nimport { links } from '../links';\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        width: 'auto',\r\n        display: 'block', // Fix IE 11 issue.\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n            width: 400,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: -(theme.spacing.unit * 2),\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    link: {\r\n        cursor: 'pointer',\r\n    },\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n});\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signupUser: {\r\n                phone: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n                email: '',\r\n            },\r\n            loading: false,\r\n            isSnackbarVisible: true,\r\n            snackbarMessage: 'Hello',\r\n        }\r\n\r\n        this.shouldBlockNavigation = false;\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        // custom rule will have name 'isPasswordMatch'\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            return value === this.state.signupUser.password;\r\n        });\r\n    }\r\n\r\n    changeState = (props) => {\r\n        const state = this.state;\r\n        for (const key in props) {\r\n            state[key] = props[key];\r\n        }\r\n        this.setState(state);\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { signupUser } = this.state;\r\n        signupUser[event.target.name] = event.target.value;\r\n\r\n        this.changeState({\r\n            signupUser: signupUser,\r\n            loading: false\r\n        });\r\n\r\n        // this.setState({ signupUser: signupUser, loading: false });\r\n\r\n        this.shouldBlockNavigation = signupUser.phone !== '' || signupUser.password !== '';\r\n    }\r\n\r\n    handleSubmit() {\r\n        // your submit logic\r\n        console.log(\"Submit\");\r\n        console.log(this.state.signupUser);\r\n        this.changeState({ loading: true });\r\n        // this.setState({ signupUser: this.state.signupUser, loading: true });\r\n        fetch('')\r\n            .then(res => {\r\n                this.changeState({ loading: false });\r\n                // this.setState({ signupUser: this.state.signupUser, loading: false });\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                this.changeState({ loading: false });\r\n                // this.setState({ signupUser: this.state.signupUser, loading: false });\r\n\r\n            })\r\n    }\r\n\r\n    handleCloseSnackbar = () =>\r\n        this.changeState({ isSnackbarVisible: false });\r\n    // this.setState({\r\n    //     signupUser: this.state.signupUser,\r\n    //     loading: this.state.loading,\r\n    //     isErrorShowing: false,\r\n    // });\r\n\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        const { signupUser } = this.state;\r\n\r\n        return (\r\n            <main className={classes.main}>\r\n                <CssBaseline />\r\n                <Prompt\r\n                    when={this.shouldBlockNavigation}\r\n                    message='You have unsaved changes, are you sure you want to leave?' />\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <ValidatorForm onSubmit={this.handleSubmit} className={classes.form}>\r\n                        {/* \r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                             <InputLabel htmlFor=\"phone\">Phone</InputLabel>\r\n                            <Input id=\"phone\" name=\"phone\" autoComplete=\"phone\" autoFocus /> \r\n\r\n                        </FormControl> \r\n                        */}\r\n                        <TextValidator\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            label='Phone'\r\n                            name='phone'\r\n                            autoComplete='tel'\r\n                            onChange={this.handleChange}\r\n                            value={signupUser.phone}\r\n                            validators={['required', 'matchRegexp:^\\\\+?(38)?(0\\\\d{9})$']}\r\n                            errorMessages={['Phone is required', 'Phone must be like 0123456789 or +380123456789']}\r\n                        />\r\n\r\n                        {/* <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"new-password\" />\r\n                        </FormControl> */}\r\n                        <TextValidator\r\n                            margin=\"normal\"\r\n                            autoComplete=\"new-password\"\r\n                            required\r\n                            fullWidth\r\n                            label='Password'\r\n                            name='password'\r\n                            type='password'\r\n                            onChange={this.handleChange}\r\n                            value={signupUser.password}\r\n                            validators={['required']}\r\n                            errorMessages={['Password is required']}\r\n                        />\r\n                        {/* \r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"confirmPassword\">Confirm Password</InputLabel>\r\n                            <Input name=\"confirmPassword\" type=\"password\" id=\"confirmPassword\" autoComplete=\"new-password\" />\r\n                        </FormControl> */}\r\n\r\n                        <TextValidator\r\n                            margin=\"normal\"\r\n                            autoComplete=\"new-password\"\r\n                            required\r\n                            fullWidth\r\n                            label='Confirm Password'\r\n                            name='confirmPassword'\r\n                            type='password'\r\n                            onChange={this.handleChange}\r\n                            value={signupUser.confirmPassword}\r\n                            validators={['isPasswordMatch', 'required']}\r\n                            errorMessages={['Password mismatch', 'This field is required']}\r\n                        />\r\n\r\n                        {/* <FormControl margin=\"normal\" fullWidth>\r\n                            <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                            <Input name=\"email\" type=\"email\" id=\"email\" />\r\n                        </FormControl> */}\r\n\r\n                        <TextValidator\r\n                            margin=\"normal\"\r\n                            autoComplete=\"email\"\r\n                            fullWidth\r\n                            label='Email'\r\n                            name='email'\r\n                            validators={['isEmail']}\r\n                            errorMessages={['Email is not valid']}\r\n                            value={signupUser.email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={this.state.loading}\r\n                            className={classes.submit}\r\n                        >Sign Up</Button>\r\n                        {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n\r\n\r\n                    </ValidatorForm>\r\n                    {/* <LinearProgress size={24}/> */}\r\n                    <Link className={classes.link} color='secondary' component={RouterLink} to={links.signin}>Sign in</Link>\r\n                </Paper>\r\n\r\n                <CustomSnackbar isSnackbarVisible={true} snackbarMessage={this.state.snackbarMessage} />\r\n\r\n\r\n\r\n            </main >\r\n        );\r\n    }\r\n}\r\n\r\nSignUp.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignUp);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Prompt } from \"react-router\";\r\n\r\nimport {\r\n    Avatar, Button, CssBaseline, Paper, Typography,\r\n    // FormControl, Input, InputLabel, \r\n    FormControlLabel, Checkbox,\r\n    Link,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nimport { links } from '../links';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        width: 'auto',\r\n        display: 'block', // Fix IE 11 issue.\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n            width: 400,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    link: {\r\n        cursor: 'pointer',\r\n    },\r\n    buttonProgress: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n});\r\n\r\n\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            signinUser: {\r\n                login: 'admin@domain.com',\r\n                password: 'QwertY123@',\r\n                remember: true,\r\n            },\r\n            loading: false,\r\n            isSnakbarVisible: true,\r\n            snakbarText: 'Hello',\r\n        }\r\n        this.shouldBlockNavigation = false;\r\n\r\n        ValidatorForm.addValidationRule('isPhoneOrEmail', (value) => {\r\n            const emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            const phonePattern = /^\\+?(38)?(0\\d{9})$/;\r\n            const login = String(value).toLowerCase();\r\n            return (emailPattern.test(login) || phonePattern.test(login));\r\n        });\r\n\r\n    }\r\n\r\n    changeState = (props) => {\r\n        const state = this.state;\r\n        for (const key in props) {\r\n            state[key] = props[key];\r\n        }\r\n        this.setState(state);\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        console.log(\"Submit\");\r\n        // console.log(this.state);\r\n        //10.2.127.32:2021\r\n        //104.248.135.234:8080\r\n        const url = \"http://104.248.135.234:8080/api/v1/account/Login\";\r\n\r\n        const user = {\r\n            login: this.state.signinUser.login,\r\n            password: this.state.signinUser.password,\r\n            // rememberMe: this.state.signinUser.remember,\r\n        }\r\n\r\n        // console.log({ user });\r\n\r\n        const jsonBody = JSON.stringify(user);\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // myHeaders.append(\"Content-Length\", jsonBody.length.toString());\r\n        // myHeaders.append(\"X-Custom-Header\", \"ProcessThisImmediately\");\r\n        myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\r\n\r\n\r\n        const requestSettings = {\r\n            method: 'POST',\r\n            body: jsonBody,\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            // headers: myHeaders\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n            }\r\n        };\r\n\r\n        console.log({ requestSettings });\r\n\r\n        this.changeState({ loading: true });\r\n\r\n        fetch(url, requestSettings)\r\n            .then((resp) => {\r\n                console.log({ resp });\r\n                this.changeState({\r\n                    loading: false\r\n                });\r\n            }).catch(err => {\r\n                console.log(\"ERRRRORRRRRR\")\r\n                console.log({ err });\r\n                this.changeState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        // console.dir(event.target);\r\n        const { signinUser } = this.state;\r\n        signinUser[event.target.name] = event.target.type === \"checkbox\" ? event.target.checked : event.target.value.trim();\r\n        this.changeState({ signinUser: signinUser });\r\n        this.shouldBlockNavigation = signinUser.login !== '' || signinUser.password !== '';\r\n        console.log(this.shouldBlockNavigation);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { signinUser } = this.state;\r\n        return (\r\n            <main className={classes.main}>\r\n                <CssBaseline />\r\n                <Prompt\r\n                    when={this.shouldBlockNavigation}\r\n                    message='You have unsaved changes, are you sure you want to leave?' />\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n        </Typography>\r\n                    <ValidatorForm onSubmit={this.handleSubmit} className={classes.form}>\r\n                        {/* <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"login\">Email/Phone</InputLabel>\r\n                            <Input id=\"login\" name=\"login\" autoComplete=\"email\" autoFocus />\r\n                        </FormControl> */}\r\n                        <TextValidator\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            label='Email/Phone'\r\n                            name='login'\r\n                            autoComplete='tel email'\r\n                            onChange={this.handleChange}\r\n                            value={signinUser.login}\r\n                            validators={['required', 'isPhoneOrEmail']}\r\n                            errorMessages={['Field is required', 'This should be Email or Phone']}\r\n                        />\r\n                        {/* <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\r\n                        </FormControl> */}\r\n                        <TextValidator\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            label='Password'\r\n                            name='password'\r\n                            type='password'\r\n                            autoComplete='current-password'\r\n                            onChange={this.handleChange}\r\n                            value={signinUser.password}\r\n                            validators={['required']}\r\n                            errorMessages={['Password is required']}\r\n                        />\r\n\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={signinUser.remember}\r\n                                    name='remember'\r\n                                    onChange={this.handleChange}\r\n                                    color=\"primary\" />\r\n                            }\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={this.state.loading}\r\n                            className={classes.submit}\r\n                        >Sign in</Button>\r\n                        {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n\r\n                    </ValidatorForm>\r\n\r\n\r\n                    <Link className={classes.link} color='secondary' component={RouterLink} to={links.signup}>Sign up</Link>\r\n\r\n                </Paper>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nSignIn.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignIn);","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport './auth';\r\n\r\n// Components\r\nimport NavBar from \"./components/NavBar\";\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Signup from './components/Signup';\r\nimport Signin from './components/Signin';\r\n\r\n// Resources\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { isAuthenticated } from './auth';\r\nimport { links } from \"./links\";\r\n\r\n\r\n\r\nfunction App() {\r\n\t// let currentUser =\r\n\t// \t{\r\n\t// \t\tlogin: 'user',\r\n\t// \t\tpassword: 'pass',\r\n\t// \t\troles: ['user']\r\n\t// \t};\r\n\t// currentUser = null;\r\n\t// component={isAuthenticated() ? Home : Signin} \r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NavBar />\r\n\t\t\t<Switch>\r\n\t\t\t\t{/* <Route exact path={links.default} onRender={isAuthenticated() ? (<Home />) : (<Redirect to={links.signin} />)} /> */}\r\n\t\t\t\t<Route exact path={links.default} render={() => isAuthenticated() ? (<Home />) : (<Redirect to={links.signin} />)} />\r\n\t\t\t\t{/* <Route path={links.home} component={isAuthenticated() ? Home : Signin} /> */}\r\n\t\t\t\t<Route exact path={links.home} render={() => isAuthenticated() ? (<Home />) : (<Redirect to={links.signin} />)} />\r\n\t\t\t\t<Route path={links.about} component={About} />\r\n\t\t\t\t{!isAuthenticated() && <Route path={links.signin} component={Signin} />}\r\n\t\t\t\t{!isAuthenticated() && <Route path={links.signup} component={Signup} />}\r\n\t\t\t\t<Route component={Home} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter> <App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}